(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{382:function(e,s,n){"use strict";n.r(s);var a=n(42),t=Object(a.a)({},(function(){var e=this,s=e.$createElement,n=e._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("p",[e._v("1、写出创建1万个NSString对象的语句")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("for (int i = 0; i < 10000; i ++) {  \n  @autoreleasepool {  \n    NSString* soldier = [[NSString alloc]init];  \n    ...\n  }  \n}\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br")])]),n("p",[e._v('2、下拉变量是在堆上还是在栈上创建的?引用计数分别为多少？\nNSString* string = @"123";\nNSMutableString* mString = [[NSMutableString alloc] initWithString:@"123"];')]),e._v(" "),n("blockquote",[n("p",[e._v("string 在栈上，引用计数为-1，栈管理，没有引用计数\nmString在堆上，引用计数为1")])]),e._v(" "),n("p",[e._v("3、自动内存释放池中的变量何时释放？")]),e._v(" "),n("blockquote",[n("p",[e._v("系统自带的在runroop结束时释放\n用户创建的在pool release时释放")])]),e._v(" "),n("p",[e._v("4、请写出@property (nonatomic, copy) NSString* string;的set方法实现")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("- (void)setString:(NSString*)string{   \n    if(_string != string) {   \n        [_string release];   \n        _string = [string copy];   \n    }\n}\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br")])]),n("p",[e._v("5、")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("僵尸对象、野指针、空指针分别指什么，有什么区别？\nObjective-C有GC（垃圾回收机制）吗？\n如果一个对象释放前被加到了NotificationCenter中，不在NotificationCenter中remove这个对象可能会出现什么问题？\n为什么很多内置的类，如TableViewController的delegate的属性是assign不是retain?\n内存管理的几条原则是什么？按照默认法则，哪些关键字生成的对象需要手动释放？哪些对象不需要手动释放会自动进入释放池？在和property结合的时候怎样有效的避免内存泄露？\n在block内如何修改block外部变量？\n使用block时什么情况会发生引用循环，如何解决？\nretain、release和autorelease的底层实现\nObjective-C是如何实现内存管理的？autorealease pool自动释放池是什么？autorelease的对象是在什么时候被release的？autorelease和release有什么区别？\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br")])]),n("p",[e._v("6、Autoreleasepool 与 Runloop 的关系\n主线程默认为我们开启 Runloop，Runloop 会自动帮我们创建Autoreleasepool，并进行Push、Pop 等操作来进行内存管理")]),e._v(" "),n("p",[e._v("7、ARC 下什么样的对象由 Autoreleasepool 管理\n并非所有的对象都由Autoreleasepool进行管理，对于普通的对象是由编译器在合适的地方为我们 Realease 了")]),e._v(" "),n("p",[e._v("8、子线程默认不会开启 Runloop，那出现 Autorelease 对象如何处理？不手动处理会内存泄漏吗？")]),e._v(" "),n("p",[e._v("在子线程你创建了 Pool 的话，产生的 Autorelease 对象就会交给 pool 去管理。如果你没有创建 Pool ，但是产生了 Autorelease 对象，就会调用 autoreleaseNoPage 方法。在这个方法中，会自动帮你创建一个 hotpage（hotPage 可以理解为当前正在使用的 AutoreleasePoolPage，如果你还是不理解，可以先看看 Autoreleasepool 的源代码，再来看这个问题 ），并调用 page->add(obj)将对象添加到 AutoreleasePoolPage 的栈中，也就是说你不进行手动的内存管理，也不会内存泄漏啦！")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('static __attribute__((noinline))\nid *autoreleaseNoPage(id obj)\n{\n    // No pool in place.\n    // hotPage 可以理解为当前正在使用的 AutoreleasePoolPage。\n    assert(!hotPage());\n\n    // POOL_SENTINEL 只是 nil 的别名\n    if (obj != POOL_SENTINEL  &&  DebugMissingPools) {\n        // We are pushing an object with no pool in place,\n        // and no-pool debugging was requested by environment.\n        _objc_inform("MISSING POOLS: Object %p of class %s "\n                     "autoreleased with no pool in place - "\n                     "just leaking - break on "\n                     "objc_autoreleaseNoPool() to debug",\n                     (void*)obj, object_getClassName(obj));\n        objc_autoreleaseNoPool(obj);\n        return nil;\n    }\n\n    // Install the first page.\n    // 帮你创建一个 hotpage（hotPage 可以理解为当前正在使用的 AutoreleasePoolPage\n    AutoreleasePoolPage *page = new AutoreleasePoolPage(nil);\n    setHotPage(page);\n\n    // Push an autorelease pool boundary if it wasn\'t already requested.\n    // POOL_SENTINEL 只是 nil 的别名，哨兵对象\n    if (obj != POOL_SENTINEL) {\n        page->add(POOL_SENTINEL);\n    }\n\n    // Push the requested object.\n    // 把对象添加到 自动释放池 进行管理\n    return page->add(obj);\n}\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br"),n("span",{staticClass:"line-number"},[e._v("14")]),n("br"),n("span",{staticClass:"line-number"},[e._v("15")]),n("br"),n("span",{staticClass:"line-number"},[e._v("16")]),n("br"),n("span",{staticClass:"line-number"},[e._v("17")]),n("br"),n("span",{staticClass:"line-number"},[e._v("18")]),n("br"),n("span",{staticClass:"line-number"},[e._v("19")]),n("br"),n("span",{staticClass:"line-number"},[e._v("20")]),n("br"),n("span",{staticClass:"line-number"},[e._v("21")]),n("br"),n("span",{staticClass:"line-number"},[e._v("22")]),n("br"),n("span",{staticClass:"line-number"},[e._v("23")]),n("br"),n("span",{staticClass:"line-number"},[e._v("24")]),n("br"),n("span",{staticClass:"line-number"},[e._v("25")]),n("br"),n("span",{staticClass:"line-number"},[e._v("26")]),n("br"),n("span",{staticClass:"line-number"},[e._v("27")]),n("br"),n("span",{staticClass:"line-number"},[e._v("28")]),n("br"),n("span",{staticClass:"line-number"},[e._v("29")]),n("br"),n("span",{staticClass:"line-number"},[e._v("30")]),n("br"),n("span",{staticClass:"line-number"},[e._v("31")]),n("br"),n("span",{staticClass:"line-number"},[e._v("32")]),n("br"),n("span",{staticClass:"line-number"},[e._v("33")]),n("br"),n("span",{staticClass:"line-number"},[e._v("34")]),n("br"),n("span",{staticClass:"line-number"},[e._v("35")]),n("br")])])])}),[],!1,null,null,null);s.default=t.exports}}]);